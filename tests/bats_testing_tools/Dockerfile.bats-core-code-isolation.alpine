# =================================================================================================
#
# Note:
#   Image purpose › source code isolation for CI build
#   This container use a copy project source code strategy
#   Alternativaly, you can use build stage `mount-version` for the mounting volume strategy
#
# =================================================================================================
FROM bats/bats:latest AS bats-core

ARG CONTAINER_PROJECT_ROOT_NAME
ENV CONTAINER_PROJECT_ROOT_NAME=${CONTAINER_PROJECT_ROOT_NAME}
ENV SRC_CODE_PATH="/code/${CONTAINER_PROJECT_ROOT_NAME}"

ARG N2ST_BATS_TESTING_TOOLS_RELATIVE_PATH
ENV N2ST_BATS_TESTING_TOOLS_RELATIVE_PATH=${N2ST_BATS_TESTING_TOOLS_RELATIVE_PATH:?'Build argument needs to be set and non-empty.'}

ARG TEAMCITY_VERSION
ENV TEAMCITY_VERSION=${TEAMCITY_VERSION}

ARG N2ST_VERSION
LABEL norlab.tools.norlab-shell-script-tools.tester="${N2ST_VERSION:?err}"
LABEL org.opencontainers.image.authors="luc.coupal.1@ulaval.ca"

SHELL ["/bin/bash", "-e", "-c"]
ARG DEBIAN_FRONTEND=noninteractive

ENV TERM=${TERM:-"xterm-256color"}
ENV COLUMNS=80

# Note:
#   Image purpose › source code isolation for CI build
#   This container use a copy project source code strategy instead of using the mounting volume

# ====Begin========================================================================================
RUN apk --no-cache add \
    git \
    tree

WORKDIR "${SRC_CODE_PATH}"

FROM bats-core AS copy-version
# ....Setup project source code....................................................................
COPY . .
COPY "${N2ST_BATS_TESTING_TOOLS_RELATIVE_PATH:?err}/bats_helper_functions.bash" ./tests/bats_testing_tools/bats_helper_functions.bash
ENTRYPOINT [ "/usr/bin/tini", "--", "bash", "bats", "--recursive", "--verbose-run", "--print-output-on-failure" ]

FROM bats-core AS mount-version
# ....Setup test environment.......................................................................
# Note:
#   About git `safe.directory` check
#       "To completely opt-out of this security check, set `safe.directory` to the string `*`.
#       This will allow all repositories to be treated as if their directory was listed in
#       the `safe.directory` list."
#       "Giving a directory with `/*` appended to it will allow access to all repositories under
#       the named directory."
#
#   Ref
#   - https://github.com/git/git/blob/313eec177ad010048b399d6fd14de871b517f7e3/Documentation/config/safe.txt#L42C1-L44C51
#   - https://github.com/git/git/blob/313eec177ad010048b399d6fd14de871b517f7e3/Documentation/config/safe.txt#L47-L48
#
#   This is required in our case since SRC_CODE_PATH will often have git submodule
RUN git config --global --add safe.directory "*"
COPY ./bats_helper_functions.bash ./tests/bats_testing_tools/bats_helper_functions.bash
ENTRYPOINT [ "/tini", "--", "bash", "bats", "--recursive", "--verbose-run", "--print-output-on-failure" ]

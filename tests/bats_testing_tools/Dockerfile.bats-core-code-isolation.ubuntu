# Note:
#   Image purpose › source code isolation for CI build
#   This container use a copy project source code strategy instead of using the mounting volume

FROM bats/bats:latest AS bats-core-base-img

FROM ubuntu:latest AS final

ARG CONTAINER_PROJECT_ROOT_NAME
ENV CONTAINER_PROJECT_ROOT_NAME=${CONTAINER_PROJECT_ROOT_NAME:?'Build argument needs to be set and non-empty.'}
ENV SRC_CODE_PATH="/code/${CONTAINER_PROJECT_ROOT_NAME}"

ARG N2ST_BATS_TESTING_TOOLS_RELATIVE_PATH
ENV N2ST_BATS_TESTING_TOOLS_RELATIVE_PATH=${N2ST_BATS_TESTING_TOOLS_RELATIVE_PATH:?'Build argument needs to be set and non-empty.'}

ARG TEAMCITY_VERSION
ENV TEAMCITY_VERSION=${TEAMCITY_VERSION}

# (Priority) ToDo: on task end >> delete next bloc ↓↓
#ARG SUPER_PROJECT_USER
#ARG SUPER_PROJECT_UID
#ARG SUPER_PROJECT_GID
#ENV SUPER_PROJECT_USER=${SUPER_PROJECT_USER:?'Build argument needs to be set and non-empty.'}
#ENV SUPER_PROJECT_UID=${SUPER_PROJECT_UID:?'Build argument needs to be set and non-empty.'}
#ENV SUPER_PROJECT_GID=${SUPER_PROJECT_GID:?'Build argument needs to be set and non-empty.'}

ARG N2ST_VERSION
LABEL norlab.tools.norlab-shell-script-tools.tester="${N2ST_VERSION:?err}"
LABEL org.opencontainers.image.authors="luc.coupal.1@ulaval.ca"

SHELL ["/bin/bash", "-e", "-c"]
ARG DEBIAN_FRONTEND=noninteractive

ENV TERM=${TERM:-"xterm-256color"}
ENV COLUMNS=80

# ====Begin========================================================================================
# ....Setup timezone and localization..............................................................
# change the locale from POSIX to UTF-8
RUN apt-get update && \
    apt-get install --assume-yes --no-install-recommends \
        locales && \
    rm -rf /var/lib/apt/lists/*

RUN locale-gen en_US en_US.UTF-8 && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
ENV LANG=en_US.UTF-8
ENV PYTHONIOENCODING=utf-8

# ====Begin========================================================================================

# ....Install development utilities................................................................
RUN apt-get update \
    && apt-get install --assume-yes --no-install-recommends \
        sudo \
        lsb-release \
        curl \
        wget \
        ca-certificates \
        git \
        tree \
        zip gzip tar unzip \
        fontconfig \
        software-properties-common \
    && rm -rf /var/lib/apt/lists/*

# ....Install bats-core............................................................................
RUN ln -s /opt/bats/bin/bats /usr/local/bin/bats
COPY --from=bats-core-base-img /opt/bats/ /opt/bats/
COPY --from=bats-core-base-img /usr/lib/bats/ /usr/lib/bats/

RUN apt-get update \
    && apt-get install --assume-yes --no-install-recommends \
        tini \
    && rm -rf /var/lib/apt/lists/*

# ....Setup N2ST utils.............................................................................
WORKDIR "${SRC_CODE_PATH}"
COPY ./bats_helper_functions.bash ./tests/bats_testing_tools/bats_helper_functions.bash

# ....Setup super project user.....................................................................
#RUN <<EOF
#    #!/bin/bash
#    # Inspired from https://roboticseabass.com/2023/07/09/updated-guide-docker-and-ros2/
#    {
#        groupadd --force --gid "${SUPER_PROJECT_GID}" "${SUPER_PROJECT_USER}"
#        useradd --uid "${SUPER_PROJECT_UID}" --gid "${SUPER_PROJECT_GID}" --create-home "${SUPER_PROJECT_USER}"
#        echo "${SUPER_PROJECT_USER} ALL=(root) NOPASSWD:ALL" >/etc/sudoers.d/"${SUPER_PROJECT_USER}"
#        chmod 0440 "/etc/sudoers.d/${SUPER_PROJECT_USER}"
#        mkdir -p "${SUPER_PROJECT_USER_HOME}"
#        chown -R "${SUPER_PROJECT_UID}":"${SUPER_PROJECT_GID}" "${SUPER_PROJECT_USER_HOME}"
#
#        # Add the 'video' groups to new user as it's required for GPU access.
#        # (not a problem on norlab-og but mandatory on Jetson device)
#        # Ref: https://forums.developer.nvidia.com/t/how-to-properly-create-new-users/68660/2
#        usermod -a -G video,sudo "${SUPER_PROJECT_USER}"
#    }
#
#    {
#      chown -R $(id -u ${SUPER_PROJECT_USER}):$(id -g ${SUPER_PROJECT_USER}) "${SRC_CODE_PATH}"
#      chown -R $(id -u ${SUPER_PROJECT_USER}):$(id -g ${SUPER_PROJECT_USER}) "${N2ST_BATS_TESTING_TOOLS_RELATIVE_PATH}"
#    }
#EOF
#
#
## ====End==========================================================================================
#USER ${SUPER_PROJECT_USER:?'Env variable needs to be set and non-empty.'}
#SHELL ["/bin/bash", "-c"]

## ====End==========================================================================================
RUN git config --global --add safe.directory "${SRC_CODE_PATH}"
WORKDIR "${SRC_CODE_PATH}"
ENTRYPOINT [ "/usr/bin/tini", "--", "bash", "bats", "--recursive", "--verbose-run", "--print-output-on-failure" ]
